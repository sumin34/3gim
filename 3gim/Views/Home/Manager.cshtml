@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script>
    // 카메라 1
    var connection = new signalR.HubConnectionBuilder().withUrl("/CameraHub").build();

    connection.on("ReceiveVideo", function (message) {

        document.getElementById("BeltViedo").src = "data:image/jpeg;base64," + message;
    })

    connection.start().then(function () {
        console.log("연결 성공 'BeltCamera'");
    }).catch(function (err) {
        console.log("연결 실패 'BeltCamera': " + err.toString());
    });
    // 카메라2
    connection.on("ReceiveVideo2", function (message) {

        document.getElementById("BeltViedo2").src = "data:image/jpeg;base64," + message;
    })

    connection.start().then(function () {
        console.log("연결 성공 'BeltCamera2'");
    }).catch(function (err) {
        console.log("연결 실패 'BeltCamera2': " + err.toString());
    });
    // AI카메라
    var connection = new signalR.HubConnectionBuilder().withUrl("/CameraHub").build();

    connection.on("ReceiveAI", function (message) {

        document.getElementById("AIBeltViedo").src = "data:image/jpeg;base64," + message;
    })

    connection.start().then(function () {
        console.log("연결 성공 'AICamera'");
    }).catch(function (err) {
        console.log("연결 실패 'AICamera': " + err.toString());
    });
</script>


<main>
    <div class="container-fluid px-5">
        <h1 class="mt-5">Manager</h1>

        <div class="row">
            <div class="col-xl-6 col-md-6">
                <div class="card bg-white text-dark mb-4">
                    <div class="card-header">Camera 1</div>
                    <div class="card-body">
                        <img src="" id="BeltViedo" style="width:200px; height:200px;" />
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-md-6">
                <div class="card bg-white text-dark mb-4">
                    <div class="card-header">AI</div>
                    <div class="card-body">
                        <img src="" id="AIBeltViedo" style="width:200px; height:200px;" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-6 col-md-6">
                <div class="card bg-white text-dark mb-4">
                    <div class="card-header">Camera 2</div>
                    <div class="card-body">
                        <img src="" id="BeltViedo2" style="width:200px; height:200px;" />
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-md-6">
                <div class="card bg-white text-dark mb-4">
                    <div class="card-header">Temperature</div>
                    <div class="card-body"><div id="tempchart" style="width: 600px;height:400px;"></div></div>
                </div>
            </div>
            <div class="row">
                <div class="col-xl-6 col-md-6">
                    <div class="card bg-white text-dark mb-4">
                        <div class="card-header">
                            Belt Control Button
                            <button class="btn btn-dark">Start</button>
                            <button class="btn btn-dark">Stop</button>
                        </div>

                    </div>
                </div>
                <div class="col-xl-6 col-md-6">
                    <div class="card bg-white text-dark mb-4">
                        <div class="card-header">
                            Temperature Contorl Button
                            <button class="btn btn-dark">Up</button>
                            <button class="btn btn-dark"> Down</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script src="/js/echarts.js"></script>

<script>

    var myChart = echarts.init(document.getElementById('tempchart'));

    //chart의 설정을 정합니다.
    var option = {
        title: {
            text: '온도 기록',
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross',
                label: {
                    backgroundColor: '#283b56'
                }
            }
        },
        legend: {
            data: ['온도']
        },
        dataZoom: {
            show: false,
            start: 0,
            end: 100
        },
        xAxis: [
            {
                type: 'category',
                boundaryGap: true,
                data: (function () {
                    var now = new Date();
                    var res = [];
                    var len = 20;
                    while (len--) {
                        res.unshift(now.toLocaleTimeString().replace(/^\D*/, ''));
                        now = new Date(now - 2000);
                    }
                    return res;
                })()
            },
        ],
        yAxis: [
            {
                type: 'value',
                scale: true,
                name: '',
                max: 30,
                min: 0,
                boundaryGap: [0.2, 0.2],
                axisLabel: {
                    formatter: '{value} ˚C'
                },
            },
        ],
        series: [
            {
                name: '온도',
                type: 'line',
                lineStyle: {
                    color: '#2A265C' //line차트 색상 변경
                },
                smooth: true, //부드러운 line 표현
                yAxisIndex: 0, //yAxis 1번째 사용
                data: (function () {
                    var res = [];
                    var len = 0;
                    while (len < 20) {
                        res.push(5);
                        len++;
                    }
                    return res;
                })()
            },
        ]
    };

    // 위에서 설정한 속성을 차트에 반영합니다.
    myChart.setOption(option);

    //데이터를 생성하고 삭제합니다.
    setInterval(function () {
        //x축에 실시간 데이터 생성
        var axisData = (new Date()).toLocaleTimeString().replace(/^\D*/, '');

        var data0 = option.series[0].data; //순수익 데이터


        //데이터의 가장 왼쪽 값을 제거
        data0.shift();
        //데이터의 가장 오른쪽 값을 추가
        data0.push(28.7);


        //x축에 시간 데이터 추가
        option.xAxis[0].data.shift();
        option.xAxis[0].data.push(axisData);

        //차트에 반영
        myChart.setOption(option);
    }, 2100);
</script>